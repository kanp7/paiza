# 京子ちゃんは 二進数 の整数同士で足し算をするプログラムを作成したいと思っています。
# 二進数の足し算において、下から 1 けた目の計算は半加算器でできることを知り、 2 けた目の計算も同じように足し算ができないかと考えています。
# 現在下から 2, 3 けた目を計算しようとしています。そこで、入力 A, B と 1 けた目からの繰り上がり C1 が与えられます。 京子ちゃんに変わって C2 と S を計算し、出力してください。


a, b, c1 = map(int, input().split())

# 半加算器のプログラム
def halfAdder(a, b):
    c = a & b
    s = a ^ b
    return (c, s)

cx, sy = halfAdder(a, b)
cy, s = halfAdder(sy, c1)
c2 = cx ^ cy

print(c2, s)
# まず 1 行目で a, b, c1 を標準入力から受け取ります。
# 次に半加算器の関数 halfAdder を作成します。 Python では値を 2 つ返す関数を作成することができます。
# あとは上記の全加算器の図のように半加算器を 2 回計算し、 cx と cy の XOR 演算を計算すれば、答えを得ることができます。