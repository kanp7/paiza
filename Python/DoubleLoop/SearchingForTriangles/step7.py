# paiza国では、1 円と X 円と Y 円の 3 種類の硬貨しかありません。ちょうど Z 円を支払うとき、支払う硬貨の枚数が最小になるように支払ったときの硬貨の枚数を求めてください。ただし、支払う各硬貨の枚数に制限は無いものとします。


x, y, z = map(int, input().split())

ans = z

for num_x in range(z // x + 1):
    for num_y in range(z // y + 1):
        if num_x * x + num_y * y <= z:
            num_one = z - num_x * x - num_y * y
            if num_x + num_y + num_one < ans:
                ans = num_x + num_y + num_one

print(ans)


# 大きな硬貨で払えるだけ払う操作を繰り返すことで最小枚数で支払うことができるように見えますが、次のような場合に正しい答えが得られません。
# 例） 1 円 , 7 円 , 16 円 を使って 21 円を支払うとき
# 大きな金額から支払った場合
# 16 円 1 枚
# 1 円 5 枚
# 最小枚数で支払った場合
# 7 円 3 枚
# このような場合に正しい答えを出すためにはどうしたら良いでしょうか。
# 一番楽なのは、全ての硬貨の支払い方を調べることです。全ての 1 , X , Y 円硬貨の支払い方を調べるには最大で Z^3 回ほど計算をする必要があります。
# 今回はちょうど Z 円を支払うため、X , Y 円硬貨の支払う枚数をそれぞれ a , b 枚と決めた場合、1 円硬貨を支払う枚数は Z - X × a -Y × b 枚となります。
# また、Z < X × a + Y × b の場合は明らかに Z 円ちょうど支払うことができません。
# この関係を用いることで、支払う X , Y 円の枚数についての二重ループを用いた全探索によってこの問題を解くことができます。
# 2 ≦ X , Y ≦ 1000 と 1 ≦ Z ≦ 3000 より、X , Y 円硬貨を支払う枚数は最大で 1500 枚となるので、各ループは 0 〜 1500 で回せば良いです。