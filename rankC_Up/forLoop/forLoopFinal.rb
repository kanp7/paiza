# パイザ君の所属する会社では忘年会の余興で次のようなゲームを行います。まず、正整数 M が発表され、参加者は手元の紙に M 個、好きな数字を書きます。このとき、紙に書く数のそれぞれは 1 以上 M 以下であり、同じ数字を何度書いても構いません。その後、 1 以上 M 以下の数 K が発表され、各参加者は自分の紙に数字 K を書いた数だけポイントをもらい、ポイントの高い順に景品が配られます。

# 忘年会の参加者の人数 N と、数 M , K が与えられ、各参加者が書いた紙が与えられるので、それぞれの参加者の得点を計算して出力してください。

# 入力される値
# 入力は以下のフォーマットで与えられます。

# N M K
# a_{1,1} ... a_{1,M}
# ...
# a_{N,1} ... a_{N,M}

# 1 行目には上で説明した数 N, M, K が半角スペース区切りで与えられ、 2 行目から (N + 1) 行目までには各参加者が紙に書いた数字が M 個ずつ半角スペース区切りで、 N 回与えられます。

# 期待する出力
# 入力された通りの順番で、各参加者の得点をN回、改行区切りで出力してください。
# 末尾に改行を入れ、余計な文字、空行を含んではいけません。

# 条件
# すべてのテストケースにおいて、以下の条件をみたします。

# ・1 ≤ N , M ≤ 50
# ・1 ≤ K , a_{i,j} ≤ M（1 ≤ i ≤ N , 1 ≤ j ≤ M）


n, m, k = gets.split(" ").map(&:to_i)

player_point = Array.new(n, 0)

n.times do |a|
    array = gets.split(" ").map(&:to_i)
    array.each do |b|
        if b == k
            player_point[a] += 1
        end
    end
    puts player_point[a]
end


# 回答2
n, m, k = gets.split(" ").map(&:to_i)

arrays = n.times.map{gets.chomp.split(" ", m).map(&:to_i)}

i = 0
until i >= n
  count = arrays[i].count(k)
  puts count
  i += 1
end